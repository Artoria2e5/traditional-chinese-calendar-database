class t{}t.TIAN_GAN=["甲","乙","丙","丁","戊","己","庚","辛","壬","癸"],t.DI_ZHI=["子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥"],t.ZODIAC=["鼠","牛","虎","兔","龍","蛇","馬","羊","猴","雞","狗","豬"],t.GAN_ZHI=["甲子","乙丑","丙寅","丁卯","戊辰","己巳","庚午","辛未","壬申","癸酉","甲戌","乙亥","丙子","丁丑","戊寅","己卯","庚辰","辛巳","壬午","癸未","甲申","乙酉","丙戌","丁亥","戊子","己丑","庚寅","辛卯","壬辰","癸巳","甲午","乙未","丙申","丁酉","戊戌","己亥","庚子","辛丑","壬寅","癸卯","甲辰","乙巳","丙午","丁未","戊申","己酉","庚戌","辛亥","壬子","癸丑","甲寅","乙卯","丙辰","丁巳","戊午","己未","庚申","辛酉","壬戌","癸亥"],t.LUNAR_MONTHS=["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],t.LUNAR_MONTHS_ALIAS=["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","冬月","腊月"],t.LUNAR_DATES=["初一","初二","初三","初四","初五","初六","初七","初八","初九","初十","十一","十二","十三","十四","十五","十六","十七","十八","十九","二十","廿一","廿二","廿三","廿四","廿五","廿六","廿七","廿八","廿九","三十"],t.JIE_QI=["立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至","小寒","大寒"];class e{constructor(t,e,r,i,n,s,a,o,h){this.year=t,this.month=e,this.date=r,this.tiangan=i,this.dizhi=n,this.lunarMonth=s,this.lunarDate=a,this.leap=o,this.solarTerm=h}getDate(){const t=new Date(0);return t.setFullYear(this.year),t.setMonth(this.month-1),t.setDate(this.date),t}toString(e){return"gregorian"===e?`${this.year}年${this.month.toString().padStart(2)}月${this.date.toString().padStart(2)}日`:"lunar"===e?`${t.TIAN_GAN[this.tiangan]}${t.DI_ZHI[this.dizhi]}${t.ZODIAC[this.dizhi]}年 ${t.LUNAR_MONTHS_ALIAS[this.lunarMonth-1]}${t.LUNAR_DATES[this.lunarDate-1]}`+(this.solarTerm?` ${t.JIE_QI[this.solarTerm-1]}`:""):`公历 ${this.year}年${this.month.toString().padStart(2)}月${this.date.toString().padStart(2)}日 农历 ${t.TIAN_GAN[this.tiangan]}${t.DI_ZHI[this.dizhi]}${t.ZODIAC[this.dizhi]}年 ${this.leap?"閏":""}${t.LUNAR_MONTHS_ALIAS[this.lunarMonth-1]}${t.LUNAR_DATES[this.lunarDate-1]}`+(this.solarTerm?` ${t.JIE_QI[this.solarTerm-1]}`:"")}}function r(t,e,r,i){return new(r||(r=Promise))((function(n,s){function a(t){try{h(i.next(t))}catch(t){s(t)}}function o(t){try{h(i.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(a,o)}h((i=i.apply(t,e||[])).next())}))}class i{constructor(){this.loaded=!1,this._arrayBuffer=null,this.compoundDates=[]}get arrayBuffer(){if(this.loaded)return this._arrayBuffer;throw new Error("please call load function before getting buffer")}set arrayBuffer(t){this._arrayBuffer=t}load(t,e={}){return r(this,void 0,void 0,(function*(){let r;if("undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node){const e=require("fs"),i=require("path"),n=yield e.promises.readFile(null!=t?t:i.join(__dirname,"../database/all.bin"));r=new ArrayBuffer(n.length);const s=new Uint8Array(r);for(let t=0,e=n.length;t<e;t++)s[t]=n[t]}else{const e=yield fetch(null!=t?t:"all.bin");r=yield e.arrayBuffer()}return this.arrayBuffer=r,this.loaded=!0,e.parseAll&&this.parseAll(),r}))}getCompoundDate(t,e,r){const i=(new Date(t,e-1,r).getTime()-new Date(1901,0,1).getTime())/864e5*5;return this.slice(i)}find(t){return"function"==typeof t?this.compoundDates.filter((e=>t(e))):this.compoundDates.filter((e=>Array.from(Object.entries(t)).every((([t,r])=>e[t]===r))))}slice(t){const r=new DataView(this.arrayBuffer,t,5),[i,n,s,a,o]=[r.getUint8(0),r.getUint8(1),r.getUint8(2),r.getUint8(3),r.getUint8(4)];return new e(i+1900,n>>>4,((15&n)<<1)+(s>>>7),s>>>3&15,(s<<1&15)+(a>>>7),(127&a)>>>3,((7&a)<<2)+(o>>>6),1==(o>>>5&1),31&o)}parseAll(){this.compoundDates.length=0;for(let t=0,e=this.arrayBuffer.byteLength;t<e;t+=5)this.compoundDates.push(this.slice(t))}}export{e as CompoundDate,t as Constants,i as Database};

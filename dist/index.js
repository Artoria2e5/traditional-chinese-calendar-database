!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define("hungtcs.traditional-chinese-calendar-database",["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TraditionalChineseCalendarDatabase={})}(this,(function(t){"use strict";class e{}e.TIAN_GAN=["甲","乙","丙","丁","戊","己","庚","辛","壬","癸"],e.DI_ZHI=["子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥"],e.ZODIAC=["鼠","牛","虎","兔","龍","蛇","馬","羊","猴","雞","狗","豬"],e.GAN_ZHI=["甲子","乙丑","丙寅","丁卯","戊辰","己巳","庚午","辛未","壬申","癸酉","甲戌","乙亥","丙子","丁丑","戊寅","己卯","庚辰","辛巳","壬午","癸未","甲申","乙酉","丙戌","丁亥","戊子","己丑","庚寅","辛卯","壬辰","癸巳","甲午","乙未","丙申","丁酉","戊戌","己亥","庚子","辛丑","壬寅","癸卯","甲辰","乙巳","丙午","丁未","戊申","己酉","庚戌","辛亥","壬子","癸丑","甲寅","乙卯","丙辰","丁巳","戊午","己未","庚申","辛酉","壬戌","癸亥"],e.LUNAR_MONTHS=["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],e.LUNAR_MONTHS_ALIAS=["正月","二月","三月","四月","五月","六月","七月","八月","九月","十月","冬月","腊月"],e.LUNAR_DATES=["初一","初二","初三","初四","初五","初六","初七","初八","初九","初十","十一","十二","十三","十四","十五","十六","十七","十八","十九","二十","廿一","廿二","廿三","廿四","廿五","廿六","廿七","廿八","廿九","三十"],e.JIE_QI=["立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至","小寒","大寒"];class i{constructor(t,e,i,n,r,s,a,o,h){this.year=t,this.month=e,this.date=i,this.tiangan=n,this.dizhi=r,this.lunarMonth=s,this.lunarDate=a,this.leap=o,this.solarTerm=h}getDate(){const t=new Date(0);return t.setFullYear(this.year),t.setMonth(this.month-1),t.setDate(this.date),t}toString(t){return"gregorian"===t?`${this.year}年${this.month.toString().padStart(2)}月${this.date.toString().padStart(2)}日`:"lunar"===t?`${e.TIAN_GAN[this.tiangan]}${e.DI_ZHI[this.dizhi]}${e.ZODIAC[this.dizhi]}年 ${e.LUNAR_MONTHS_ALIAS[this.lunarMonth-1]}${e.LUNAR_DATES[this.lunarDate-1]}`+(this.solarTerm?` ${e.JIE_QI[this.solarTerm-1]}`:""):`公历 ${this.year}年${this.month.toString().padStart(2)}月${this.date.toString().padStart(2)}日 农历 ${e.TIAN_GAN[this.tiangan]}${e.DI_ZHI[this.dizhi]}${e.ZODIAC[this.dizhi]}年 ${this.leap?"閏":""}${e.LUNAR_MONTHS_ALIAS[this.lunarMonth-1]}${e.LUNAR_DATES[this.lunarDate-1]}`+(this.solarTerm?` ${e.JIE_QI[this.solarTerm-1]}`:"")}}
/*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */function n(t,e,i,n){return new(i||(i=Promise))((function(r,s){function a(t){try{h(n.next(t))}catch(t){s(t)}}function o(t){try{h(n.throw(t))}catch(t){s(t)}}function h(t){var e;t.done?r(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(a,o)}h((n=n.apply(t,e||[])).next())}))}t.CompoundDate=i,t.Constants=e,t.Database=class{constructor(){this.loaded=!1,this._arrayBuffer=null,this.compoundDates=[]}get arrayBuffer(){if(this.loaded)return this._arrayBuffer;throw new Error("please call load function before getting buffer")}set arrayBuffer(t){this._arrayBuffer=t}load(t,e={}){return n(this,void 0,void 0,(function*(){let i;if("undefined"!=typeof process&&null!=process.versions&&null!=process.versions.node){const e=require("fs"),n=yield e.promises.readFile(t);i=new ArrayBuffer(n.length);const r=new Uint8Array(i);for(let t=0,e=n.length;t<e;t++)r[t]=n[t]}else{const e=yield fetch(t);i=yield e.arrayBuffer()}return this.arrayBuffer=i,this.loaded=!0,e.parseAll&&this.parseAll(),i}))}getCompoundDate(t,e,i){const n=(new Date(t,e-1,i).getTime()-new Date(1901,0,1).getTime())/864e5*5;return this.slice(n)}find(t){return"function"==typeof t?this.compoundDates.filter((e=>t(e))):this.compoundDates.filter((e=>Array.from(Object.entries(t)).every((([t,i])=>e[t]===i))))}slice(t){const e=new DataView(this.arrayBuffer,t,5),[n,r,s,a,o]=[e.getUint8(0),e.getUint8(1),e.getUint8(2),e.getUint8(3),e.getUint8(4)];return new i(n+1900,r>>>4,((15&r)<<1)+(s>>>7),s>>>3&15,(s<<1&15)+(a>>>7),(127&a)>>>3,((7&a)<<2)+(o>>>6),1==(o>>>5&1),31&o)}parseAll(){this.compoundDates.length=0;for(let t=0,e=this.arrayBuffer.byteLength;t<e;t+=5)this.compoundDates.push(this.slice(t))}},Object.defineProperty(t,"__esModule",{value:!0})}));
